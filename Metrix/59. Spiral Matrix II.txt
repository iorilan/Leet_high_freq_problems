def generateMatrix(self, n: int) -> List[List[int]]:
    res=[[]] * n
    for i in range(0, n):
        res[i] = [0]*n
    def blocked (r,c):
        return r == n or c == n or r < 0 or c < 0 or res[r][c] > 0
    moves = {
        'r': {'go': [0, 1], 'turn': ['d', 1, 0]},
        'd': {'go': [1, 0], 'turn': ['l', 0, -1]},
        'l': {'go': [0, -1], 'turn': ['u', -1, 0]},
        'u': {'go': [-1, 0], 'turn': ['r', 0, 1]}
    }
    r,c = 0,0 # current position
    direction='r' # current direction
    cur = 1
    total = n*n
    while cur < total+1:
        res[r][c]=cur
        move = moves[direction]
        go_r, go_c = move['go']
        if blocked(r+go_r, c+go_c):
            next_dir, turn_r, turn_c = move['turn']
            r += turn_r
            c += turn_c
            direction = next_dir
        else:
            r += go_r
            c += go_c
        cur += 1
    return res