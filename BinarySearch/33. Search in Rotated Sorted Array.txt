def search(self, nums: List[int], target: int) -> int:
    """
        1. find the pivot index
        2. do binary search either in [0...pivot] or [pivot+1,... n]
        
            pivot
              |
        4 5 6 7 0 1 2
        |       |   |
        0   pivot+1 n
        when target >= nums[0]: search in [0...pivot]
        else                  : search in [pivot+1...n]
    """
    piv = 0
    while piv < len(nums)-1 and nums[piv] < nums[piv+1]:
        piv +=1
    
    if target >= nums[0]:
        x= bisect_left(nums, target, 0, piv)
    else:
        x = bisect_left(nums, target, piv+1, len(nums)-1)
    if x > len(nums) - 1:
        return -1
    return x if nums[x] == target else -1