def find132pattern(self, nums: List[int]) -> bool:
    """
        for array :
        a1, a2, a3 ....ai,... an
                        |
                        Information needed :
                        1. minimum value before self  => use min[] track. get from min[i-1]
                        2. smaller values after self  => need a mono stack
        Sample:
        [4, 2,  1,  5,  3,  2,      4,      5,      7]
    min  4  2   1   1   1   1       1       1       1
stack                   |   7,5,4,2  7,5,4   7,5    7  <= maintein decreasing stack
                        |
                      3>2>1. return here
    """
    # track min values until i-th element
    
    # remove dup neighbors
    arr = [nums[0]] + [nums[i] for i in range(1, len(nums)) if nums[i-1]!=nums[i]]
    mins = [0] * len(arr)
    m = arr[0]
    for i in range(0, len(arr)):
        m = min(arr[i], m)
        mins[i] = m
    # a decreasing stack from end until self
    stack = []
    for i in range(len(arr)-1, -1, -1):
        while stack and stack[-1] < arr[i]:
            v = stack.pop()
            if v > mins[i]:
                print(mins[i], arr[i], v)
                return True
        stack.append(arr[i])
    return False