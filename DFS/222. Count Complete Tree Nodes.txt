1. BFS
def countNodes(self, root: Optional[TreeNode]) -> int:
    if not root :
        return 0
    q = [root]
    res=1
    while q :
        child = []
        while q :
            n = q.pop()
            if n.left:
                child.append(n.left)
            if n.right:
                child.append(n.right)
        res+=len(child)
        q = child
    return res

2. DFS
def countNodes(self, root: Optional[TreeNode]) -> int:
    if not root:
        return 0
    return 1+self.countNodes(root.left)+self.countNodes(root.right)