def maxProfit(self, prices: List[int]) -> int:
    dp=[0]*len(prices)
    for i in range(0, len(prices)):
        dp[i]= [0]*3 # best of 3 state : buy, sell, cooldown
    dp[0] = [-prices[0], 0, 0]
    res=0
    for i in range(1, len(prices)):
        dp[i][0] = max(dp[i-1][0], dp[i-1][2]-prices[i]) #cooldown-> buy , just buy->cooldown
        dp[i][1] = max(dp[i-1][1], dp[i-1][0]+prices[i]) #just buy->sell, just sell -> cooldown
        dp[i][2] = max(dp[i-1][2], dp[i-1][1]) #cooldown ->still cooldown, just sell-> cooldown
        res=max(res, dp[i][1])
    return res