def coinChange(self, coins: List[int], amount: int) -> int:
    """
        coins = [1,2,5]     amount=11
        amount      dp
        1           1
        2           1
        3           2 = min(dp[1]+dp[2],dp[2]+dp[1])
        4           2 = min(dp[1]+dp[3], dp[2]+dp[2], dp[3]+dp[1])
        5           1
        6           2 = min(dp[1]+dp[5], dp[2]+dp[4], dp[3]+dp[3], dp[4]+dp[2], dp[5]+dp[1])
        ...
        n           min(dp[1]+dp[n-1], dp[2]+dp[n-2]...+dp[n-1]dp[1])
    """
    dp = [float('inf')] * (amount+1)
    dp[0]=0
    for c in coins:
        if c < len(dp):
            dp[c]=1
    for i in range(1, amount+1):
        for c in coins:
            if i>c:
                dp[i] = min(dp[i-c]+dp[c], dp[i])
    return -1 if dp[amount] == float('inf') else dp[amount]