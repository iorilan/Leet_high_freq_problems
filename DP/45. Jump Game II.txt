def jump(self, nums: List[int]) -> int:
    dp = [float('inf')]*len(nums)
    dp[len(nums)-1]=0 # last position, need 0 jump
    for i in range(len(nums)-2,-1,-1):
        # one jump reach the last
        if nums[i]>=len(nums)-1-i:
            dp[i]=1
            continue
        # jump to the reachable numbers 
        for j in range(i, i+nums[i]+1):
            dp[i]=min(dp[i], dp[j]+1)
    return dp[0]