def minPathSum(self, grid: List[List[int]]) -> int:
    row = len(grid)
    col = len(grid[0])
    dp = [[]]*row
    for i in range(0,row):
        dp[i] = [0]*col

    dp[0][0]=grid[0][0]
    for i in range(1, row): # first column
        dp[i][0] = grid[i][0]+dp[i-1][0]
        
    for i in range(1, col): # first row
        dp[0][i] = grid[0][i]+dp[0][i-1]
        
    for r in range(1, row):
        for c in range(1, col):
            dp[r][c] = min(dp[r-1][c],dp[r][c-1]) + grid[r][c] # come from up or left
            
    return dp[row-1][col-1]