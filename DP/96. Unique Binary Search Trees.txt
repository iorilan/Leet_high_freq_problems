def numTrees(self, n: int) -> int:
    @cache
    def bst(n):
        if n <= 1:
            return 1
        res = 0
        for i in range(1, n+1):
            res += bst(i-1) * bst(n-i)
        return res
    return bst(n)

def numTrees(self, n: int) -> int:
    dp = [0] * (n+1)
    dp[0] = dp[1] = 1 # empty or leaf
    for i in range(2, n+1):
        for j in range(0, i):
            dp[i] += dp[j]*dp[i-j-1]
    return dp[-1]