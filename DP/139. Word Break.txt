1. DFS + Cache
def wordBreak(self, s: str, wordDict: List[str]) -> bool:
    wd = set(wordDict)
    
    @cache
    def in_dict(s):
        if not s:
            return True
        for i in range(len(s)):
            if s[:i+1] in wd and in_dict(s[i+1:]):
                return True
        return False
    return in_dict(s)

2. Convert into DP
def wordBreak(self, s: str, wordDict: List[str]) -> bool:
    wd = set(wordDict)
    dp = [False] * (len(s)+1)
    dp[0] = True # empty string consider in dict
    for i in range(len(s)):
        for j in range(0, i+1):
            if s[j:i+1] in wd and dp[j]:
                dp[i+1] = True
                break
    return dp[-1]