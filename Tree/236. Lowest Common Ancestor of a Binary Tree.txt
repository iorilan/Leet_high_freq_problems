def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
    """
        Case1
                current
              /        \
            ..          ..
            p           q
        
        Case2
                    p  (current)
                    ...
                        \
                         q
        Case3       
                            q
                        ...     ...
                        /
                     p (current)
        Case4               current                     current
                            /      \                    /       \
                        ....        ...     or         ...      ...
                        p,q                                     p,q
    """
    def lca(n, n1, n2):
        if not n:
            return None
        if n == n1 or n == n2:                 # Case2 , Case3
            return n
        left = lca(n.left, n1, n2)
        right = lca(n.right, n1, n2)
        if left and right:                     # Case1
            return n
        return left or right                   # Case4
    
    return lca(root, p, q)